var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.195,1,1.407]],["body/modules/AppModule.html",[0,1.929,1,2.557,2,1.334,3,1.334,4,1.869,5,1.869,6,1.334,7,1.869,8,1.869,9,2.266,10,2.266,11,2.171,12,0.06,13,2.431,14,1.869,15,1.869,16,0.82,17,0.688,18,0.688,19,2.87,20,3.734,21,1.259,22,1.137,23,2.87,24,0.82,25,0.364,26,0.035,27,0.046,28,0.035]],["title/classes/CreateTaskDto.html",[25,0.325,29,1.195]],["body/classes/CreateTaskDto.html",[12,0.06,16,0.81,17,0.68,18,0.68,21,0.957,24,0.81,25,0.469,26,0.035,27,0.046,28,0.035,29,1.723,30,1.554,31,3.259,32,2.241,33,0.563,34,1.723,35,1.919,36,2.687,37,1.058,38,1.475,39,2.413,40,3.585,41,1.723,42,2.838,43,2.838,44,1.848]],["title/classes/GetTaskAndFilterDto.html",[25,0.325,45,1.195]],["body/classes/GetTaskAndFilterDto.html",[12,0.06,16,0.751,17,0.631,18,0.631,21,1.188,24,0.751,25,0.447,26,0.032,27,0.043,28,0.032,30,1.44,33,0.522,34,1.639,37,1.007,38,1.188,39,2.295,40,2.784,41,1.639,44,1.713,45,1.639,46,3.139,47,1.574,48,2.077,49,3.139,50,1.574,51,2.631,52,2.631,53,1.574,54,2.631,55,2.631,56,2.631,57,3.976,58,1.44,59,2.631,60,2.077,61,1.713]],["title/interfaces/Task.html",[47,1.018,62,1.407]],["body/interfaces/Task.html",[12,0.061,16,0.747,17,0.627,18,0.627,24,1.003,26,0.032,27,0.043,28,0.032,33,0.519,34,1.633,35,1.97,36,2.759,37,1.21,38,1.614,47,1.391,50,1.678,53,1.678,62,1.433,63,2.617,64,1.704,65,2.759,66,2.617,67,2.287,68,2.774,69,2.774]],["title/classes/TaskStatusValidationPipe.html",[25,0.325,70,1.407]],["body/classes/TaskStatusValidationPipe.html",[12,0.062,16,0.572,17,0.48,18,0.48,21,0.982,22,0.794,24,0.572,25,0.254,26,0.025,27,0.036,28,0.025,30,1.097,33,0.398,34,1.355,37,0.981,38,1.351,41,1.597,50,1.656,53,0.794,58,1.097,60,2.301,61,1.897,70,1.596,71,2.978,72,1.583,73,2.915,74,3.435,75,3.435,76,3.435,77,1.897,78,2.712,79,2.915,80,2.915,81,1.305,82,2.194,83,2.915,84,2.004,85,2.915,86,2.004,87,1.897,88,1.897,89,1.897,90,1.596,91,2.915,92,2.915,93,2.004,94,2.004,95,2.004,96,2.004,97,1.583,98,1.097,99,2.004,100,1.897,101,2.004,102,1.583]],["title/controllers/TasksController.html",[103,1.407,104,1.407]],["body/controllers/TasksController.html",[12,0.062,16,0.413,17,0.347,18,0.347,21,1.243,22,0.573,24,0.413,25,0.183,26,0.018,27,0.028,28,0.018,29,1.714,33,0.287,37,0.991,38,1.386,39,2.26,41,1.614,45,1.484,47,1.728,50,1.375,53,1.264,58,0.792,65,2.4,70,1.247,77,1.482,87,2.26,88,2.26,89,2.26,90,1.901,100,2.4,103,0.792,104,1.247,105,1.143,106,1.143,107,1.447,108,0.942,109,1.798,110,1.798,111,1.798,112,1.798,113,2.223,114,1.143,115,1.447,116,1.447,117,1.143,118,2.277,119,1.447,120,1.143,121,2.277,122,1.447,123,1.447,124,1.447,125,2.277,126,1.143,127,2.277,128,1.447,129,1.447,130,1.447,131,1.143,132,1.447,133,2.277,134,1.447,135,1.447,136,1.447,137,1.143,138,1.143,139,1.143,140,1.143,141,1.447,142,1.447,143,0.902,144,1.143,145,1.447,146,1.447,147,1.447,148,1.447,149,1.447,150,1.447,151,1.447,152,1.447,153,1.447,154,1.447,155,1.447,156,1.447,157,1.447,158,1.447,159,1.447,160,1.447,161,1.447]],["title/modules/TasksModule.html",[0,1.195,11,1.195]],["body/modules/TasksModule.html",[0,1.883,2,1.269,3,1.269,4,1.778,5,1.778,6,1.269,7,2.637,8,1.778,11,2.141,12,0.06,13,2.353,14,1.778,15,1.778,16,0.78,17,0.655,18,0.655,21,1.365,22,1.081,24,0.78,25,0.346,26,0.034,27,0.044,28,0.034,104,2.217,105,2.853,143,1.824,144,2.156,162,2.156,163,2.156,164,2.731,165,2.731]],["title/injectables/TasksService.html",[143,1.018,166,1.407]],["body/injectables/TasksService.html",[12,0.063,16,0.359,17,0.301,18,0.301,21,1.091,22,0.497,24,0.359,25,0.159,26,0.015,27,0.025,28,0.015,29,1.61,33,0.249,34,0.945,35,0.945,36,1.324,37,0.989,38,1.28,41,1.695,45,1.61,47,1.863,49,1.606,50,1.444,53,1.167,58,0.688,61,0.818,65,2.374,77,1.324,78,2.024,81,0.818,82,0.688,87,2.107,88,2.107,89,2.107,90,1.896,97,0.992,98,0.688,100,2.107,108,2.374,109,1.606,110,1.606,111,1.606,112,2.326,113,1.606,114,1.606,117,0.992,120,1.606,126,1.606,137,0.992,138,0.992,139,0.992,140,0.992,143,0.805,166,1.114,167,1.256,168,0.992,169,2.034,170,1.256,171,1.256,172,2.034,173,1.256,174,1.256,175,2.034,176,1.256,177,1.256,178,1.256,179,1.256,180,2.034,181,0.992,182,2.034,183,2.946,184,1.256,185,1.256,186,1.256,187,1.256,188,1.256,189,1.256,190,1.256,191,2.034,192,1.256,193,1.256,194,1.256,195,0.992,196,1.256]],["title/coverage.html",[197,2.259]],["body/coverage.html",[6,1.14,12,0.06,18,0.588,25,0.486,26,0.03,27,0.041,28,0.03,29,1.14,31,1.936,32,1.936,37,0.7,45,1.14,46,1.936,47,1.331,48,1.936,50,0.971,62,1.342,64,1.596,70,1.342,71,1.936,72,1.936,98,1.342,103,1.342,104,1.342,106,1.936,143,0.971,166,1.342,168,1.936,195,3.773,197,1.596,198,2.452,199,2.452,200,2.452,201,1.936,202,2.452,203,4.126,204,3.028,205,3.028,206,3.835,207,1.936,208,1.936,209,1.936,210,3.361,211,2.452,212,2.452,213,2.452,214,2.452,215,2.452,216,2.452]],["title/dependencies.html",[3,1.432,217,2.164]],["body/dependencies.html",[3,1.39,12,0.062,22,1.184,25,0.485,26,0.037,27,0.047,28,0.037,44,1.946,181,2.36,218,4.231,219,2.989,220,2.989,221,3.833,222,2.989,223,2.989,224,2.989,225,2.989,226,2.989,227,2.989,228,2.989,229,2.989,230,2.989,231,2.989,232,2.989,233,2.989,234,2.989,235,2.989,236,2.989,237,2.989]],["title/miscellaneous/enumerations.html",[238,0.857,239,2.432]],["body/miscellaneous/enumerations.html",[12,0.059,26,0.042,27,0.051,28,0.042,33,0.678,53,1.65,64,2.222,67,2.712,68,3.289,69,3.289,82,2.461,238,1.352,239,2.696,240,3.414]],["title/miscellaneous/functions.html",[238,0.857,241,2.432]],["body/miscellaneous/functions.html",[6,2.16,12,0.054,26,0.045,27,0.054,28,0.045,33,0.732,201,2.912,238,1.461,241,2.912,242,3.688]],["title/index.html",[33,0.43,243,2.164,244,2.164]],["body/index.html",[12,0.06,17,0.548,26,0.028,27,0.039,28,0.028,35,1.062,67,1.488,197,1.488,245,2.286,246,2.286,247,3.201,248,2.286,249,2.286,250,2.286,251,2.286,252,2.286,253,2.286,254,3.695,255,2.286,256,2.286,257,2.286,258,2.286,259,4.485,260,2.286,261,2.286,262,2.286,263,4.368,264,2.286,265,2.286,266,3.201,267,2.286,268,2.286,269,2.286,270,2.286,271,3.201,272,3.201,273,2.286,274,2.286,275,2.286,276,3.201,277,3.201,278,2.286,279,2.286,280,2.286,281,2.286,282,1.805,283,2.286,284,2.286,285,2.286,286,2.286,287,2.286,288,2.286,289,2.286,290,2.286,291,2.286,292,2.286,293,2.286,294,2.286,295,2.286,296,2.286,297,2.286,298,2.286,299,2.286,300,2.286]],["title/modules.html",[2,1.613]],["body/modules.html",[1,1.976,2,1.678,11,1.678,12,0.053,26,0.044,27,0.053,28,0.044,282,3.401,301,4.308,302,4.308,303,4.308]],["title/overview.html",[304,2.74]],["body/overview.html",[0,1.39,1,2.444,2,1.39,3,1.39,4,1.946,5,1.946,6,1.39,7,1.946,8,1.946,9,2.36,10,2.36,11,2.145,12,0.055,13,2.495,14,1.946,15,1.946,26,0.037,27,0.047,28,0.037,30,1.637,62,1.637,102,3.341,103,1.637,143,1.676,162,2.36,163,2.36,166,1.637,304,2.36,305,2.989,306,2.989]],["title/miscellaneous/variables.html",[238,0.857,307,2.432]],["body/miscellaneous/variables.html",[12,0.062,26,0.029,27,0.041,28,0.029,33,0.473,35,1.107,37,0.941,38,1.273,81,2.459,82,2.068,90,1.304,98,1.304,108,1.551,131,2.602,204,1.881,205,3.218,207,2.602,208,2.602,209,2.602,238,0.944,307,1.881,308,3.778,309,2.383,310,2.383,311,3.778,312,3.295,313,2.383,314,2.383,315,2.383,316,2.383,317,2.383,318,2.383,319,2.383,320,2.383,321,2.383,322,2.383,323,2.383,324,2.383,325,2.383,326,2.383,327,2.383,328,2.383,329,2.383,330,2.383,331,3.295,332,3.778,333,2.383]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":195,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":102,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"overview.html":{}}}],["2",{"_index":305,"title":{},"body":{"overview.html":{}}}],["3",{"_index":306,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["6.2.10",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["addtag('tasks",{"_index":315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedstatus",{"_index":76,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["amazing",{"_index":283,"title":{},"body":{"index.html":{}}}],["api",{"_index":312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":261,"title":{},"body":{"index.html":{}}}],["applications",{"_index":253,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":293,"title":{},"body":{"index.html":{}}}],["backers",{"_index":284,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":94,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["badrequestexception(`invalid",{"_index":99,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["body",{"_index":129,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":303,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":301,"title":{},"body":{"modules.html":{}}}],["build",{"_index":316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":248,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":30,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":162,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":163,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["config",{"_index":207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":183,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(private",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{}}}],["controller",{"_index":103,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllerkey",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":105,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["coverage",{"_index":197,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtask",{"_index":109,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtask(@body",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{}}}],["createtask(createtaskdto",{"_index":114,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtaskdto",{"_index":29,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["createuser",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customoptions",{"_index":208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":39,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{}}}],["default",{"_index":81,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete('/:id",{"_index":118,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask",{"_index":110,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["deletetask(@param('id",{"_index":160,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask(id",{"_index":117,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":35,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":262,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":69,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/get",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":273,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":249,"title":{},"body":{"index.html":{}}}],["enum",{"_index":66,"title":{},"body":{"interfaces/Task.html":{}}}],["enumerations",{"_index":239,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["filter.dto",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filter.dto.ts",{"_index":48,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:11",{"_index":52,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":55,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["filterdto",{"_index":125,"title":{},"body":{"controllers/TasksController.html":{}}}],["found",{"_index":193,"title":{},"body":{"injectables/TasksService.html":{}}}],["foundtask.id",{"_index":196,"title":{},"body":{"injectables/TasksService.html":{}}}],["framework",{"_index":247,"title":{},"body":{"index.html":{}}}],["function",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":241,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":121,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskandfilter",{"_index":169,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskandfilter(gettaskandfilterdto",{"_index":172,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskandfilterdto",{"_index":45,"title":{"classes/GetTaskAndFilterDto.html":{}},"body":{"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["gettaskbyid",{"_index":111,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":120,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks",{"_index":112,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks(@query(validationpipe",{"_index":148,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(filterdto",{"_index":123,"title":{},"body":{"controllers/TasksController.html":{}}}],["getting",{"_index":243,"title":{"index.html":{}},"body":{}}],["grow",{"_index":279,"title":{},"body":{"index.html":{}}}],["here",{"_index":290,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":297,"title":{},"body":{"index.html":{}}}],["id",{"_index":65,"title":{},"body":{"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":73,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["injectable",{"_index":166,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":167,"title":{},"body":{"injectables/TasksService.html":{}}}],["inprogress",{"_index":68,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["installation",{"_index":258,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":260,"title":{},"body":{"index.html":{}}}],["instead",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":62,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":63,"title":{},"body":{"interfaces/Task.html":{}}}],["isin",{"_index":56,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["isin([taskstatus.done",{"_index":59,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["isnotempty",{"_index":40,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{}}}],["isoptional",{"_index":57,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["isoptional()@isin(undefined",{"_index":54,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["isoptional()@isnotempty",{"_index":51,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["isvalidstatus",{"_index":79,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["isvalidstatus(status",{"_index":85,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["join",{"_index":286,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":294,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["library",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":300,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":277,"title":{},"body":{"index.html":{}}}],["make",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["methodkey",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":238,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":276,"title":{},"body":{"index.html":{}}}],["mode",{"_index":266,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":289,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":295,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["names",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":254,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":299,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":98,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":246,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":179,"title":{},"body":{"injectables/TasksService.html":{}}}],["notfoundexception(`task",{"_index":192,"title":{},"body":{"injectables/TasksService.html":{}}}],["npm",{"_index":259,"title":{},"body":{"index.html":{}}}],["object.keys(filterdto).length",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{}}}],["open",{"_index":67,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operation",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationidfactory",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option.swagger.ts",{"_index":205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":89,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["options",{"_index":209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":304,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":217,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{},"miscellaneous/variables.html":{}}}],["param('id",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["patch",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{}}}],["patch('/:id/status",{"_index":127,"title":{},"body":{"controllers/TasksController.html":{}}}],["persistauthorization",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipes/task",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{}}}],["pipetransform",{"_index":74,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["please",{"_index":287,"title":{},"body":{"index.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{}}}],["post()@usepipes(validationpipe",{"_index":115,"title":{},"body":{"controllers/TasksController.html":{}}}],["prefix",{"_index":107,"title":{},"body":{"controllers/TasksController.html":{}}}],["private",{"_index":78,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":268,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":245,"title":{},"body":{"index.html":{}}}],["project",{"_index":278,"title":{},"body":{"index.html":{}}}],["properties",{"_index":34,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["query",{"_index":134,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":288,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["reflect",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":257,"title":{},"body":{"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":100,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":90,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["rimraf",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":263,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":250,"title":{},"body":{"index.html":{}}}],["search",{"_index":49,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"injectables/TasksService.html":{}}}],["server",{"_index":251,"title":{},"body":{"index.html":{}}}],["setdescription('tasks",{"_index":313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('nestjs",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":252,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["sponsors",{"_index":281,"title":{},"body":{"index.html":{}}}],["src/.../config",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.model.ts",{"_index":240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":201,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger/config",{"_index":204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/dto/create",{"_index":31,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/get",{"_index":46,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"coverage.html":{}}}],["src/tasks/pipes/task",{"_index":71,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":106,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:24",{"_index":124,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:32",{"_index":122,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:38",{"_index":116,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:43",{"_index":128,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:51",{"_index":119,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.model.ts",{"_index":64,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/tasks.module.ts",{"_index":164,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":168,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:11",{"_index":176,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:15",{"_index":173,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:34",{"_index":174,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:44",{"_index":170,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:58",{"_index":177,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:69",{"_index":171,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:9",{"_index":178,"title":{},"body":{"injectables/TasksService.html":{}}}],["start",{"_index":264,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":267,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":269,"title":{},"body":{"index.html":{}}}],["started",{"_index":244,"title":{"index.html":{}},"body":{}}],["starter",{"_index":256,"title":{},"body":{"index.html":{}}}],["statements",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":50,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["stay",{"_index":291,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":282,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":302,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["swaggercustomoptions",{"_index":317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggerdocumentoptions",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":47,"title":{"interfaces/Task.html":{}},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["task.description.includes(search",{"_index":189,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":32,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:4",{"_index":43,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:7",{"_index":42,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.id",{"_index":191,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.status",{"_index":186,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":188,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks",{"_index":108,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["tasks.controller",{"_index":165,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.filter",{"_index":187,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.filter((task",{"_index":185,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.model",{"_index":58,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["tasks.service",{"_index":144,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":104,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["taskservice",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":143,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":53,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.done",{"_index":83,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["taskstatus.inprogress",{"_index":60,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{}}}],["taskstatus.open",{"_index":61,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["taskstatusvalidationpipe",{"_index":70,"title":{"classes/TaskStatusValidationPipe.html":{}},"body":{"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["test",{"_index":272,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":275,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":274,"title":{},"body":{"index.html":{}}}],["tests",{"_index":271,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":280,"title":{},"body":{"index.html":{}}}],["this.allowedstatus.indexof(status",{"_index":101,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["this.gettasks",{"_index":184,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.isvalidstatus(value",{"_index":96,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["this.tasks",{"_index":182,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find((task",{"_index":190,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":194,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.taskservice.createtask(createtaskdto",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.deletetask(id",{"_index":161,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettaskandfilter(filterdto",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettaskbyid(id",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettasks",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.updatetaskstatus(id",{"_index":159,"title":{},"body":{"controllers/TasksController.html":{}}}],["throw",{"_index":97,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{}}}],["title",{"_index":36,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{}}}],["touch",{"_index":292,"title":{},"body":{"index.html":{}}}],["transform",{"_index":80,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["transform(value",{"_index":92,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["transformer",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":298,"title":{},"body":{"index.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"classes/TaskStatusValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":255,"title":{},"body":{"index.html":{}}}],["ui",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"injectables/TasksService.html":{}}}],["unit",{"_index":270,"title":{},"body":{"index.html":{}}}],["updatetaskstatus",{"_index":113,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updatetaskstatus(id",{"_index":126,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["usepipes",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{}}}],["usepipes(validationpipe",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{}}}],["usercontroller_createuser",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":180,"title":{},"body":{"injectables/TasksService.html":{}}}],["uuidv4",{"_index":181,"title":{},"body":{"injectables/TasksService.html":{},"dependencies.html":{}}}],["validation.pipes",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{}}}],["validation.pipes.ts",{"_index":72,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"coverage.html":{}}}],["validation.pipes.ts:11",{"_index":93,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validation.pipes.ts:20",{"_index":86,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validation.pipes.ts:5",{"_index":84,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["validationpipe",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{}}}],["validator",{"_index":44,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"dependencies.html":{}}}],["value",{"_index":82,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":95,"title":{},"body":{"classes/TaskStatusValidationPipe.html":{}}}],["variable",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":307,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":265,"title":{},"body":{"index.html":{}}}],["website",{"_index":296,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":285,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\n\n@Module({\n  imports: [TasksModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nexport class CreateTaskDto {\n  @IsNotEmpty()\n  title: string;\n\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTaskAndFilterDto.html":{"url":"classes/GetTaskAndFilterDto.html","title":"class - GetTaskAndFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTaskAndFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/get-task-filter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsNotEmpty, IsOptional } from 'class-validator';\nimport { TaskStatus } from '../tasks.model';\n\nexport class GetTaskAndFilterDto {\n  @IsOptional()\n  @IsIn([TaskStatus.DONE, TaskStatus.INPROGRESS, TaskStatus.OPEN])\n  status: TaskStatus;\n\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         TaskStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n}\n\nexport enum TaskStatus {\n  OPEN = 'OPEN',\n  INPROGRESS = 'INPROGRESS',\n  DONE = 'DONE',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusValidationPipe.html":{"url":"classes/TaskStatusValidationPipe.html","title":"class - TaskStatusValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/pipes/task-status-validation.pipes.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isValidStatus\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            allowedStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    TaskStatus.DONE,\n    TaskStatus.INPROGRESS,\n    TaskStatus.OPEN,\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/pipes/task-status-validation.pipes.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isValidStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidStatus(status: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipes.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipes.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PipeTransform } from '@nestjs/common';\nimport { TaskStatus } from '../tasks.model';\n\nexport class TaskStatusValidationPipe implements PipeTransform {\n  readonly allowedStatus = [\n    TaskStatus.DONE,\n    TaskStatus.INPROGRESS,\n    TaskStatus.OPEN,\n  ];\n\n  transform(value: string): string {\n    value = value.toUpperCase();\n\n    if (!this.isValidStatus(value)) {\n      throw new BadRequestException(`Invalid status \"${value}\"`);\n    }\n    return value;\n  }\n\n  private isValidStatus(status: any): boolean {\n    return this.allowedStatus.indexOf(status) !== -1;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks(filterDto: GetTaskAndFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetTaskAndFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/status')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTaskAndFilterDto } from './dto/get-task-filter.dto';\nimport { TaskStatusValidationPipe } from './pipes/task-status-validation.pipes';\nimport { Task, TaskStatus } from './tasks.model';\nimport { TasksService } from './tasks.service';\n\n@Controller('tasks')\nexport class TasksController {\n  constructor(private taskService: TasksService) {}\n\n  @Get()\n  getTasks(@Query(ValidationPipe) filterDto: GetTaskAndFilterDto): Task[] {\n    if (Object.keys(filterDto).length) {\n      return this.taskService.getTaskAndFilter(filterDto);\n    }\n    return this.taskService.getTasks();\n  }\n\n  @Get('/:id')\n  getTaskById(@Param('id') id: string): Task {\n    return this.taskService.getTaskById(id);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  createTask(@Body() createTaskDto: CreateTaskDto): Task {\n    return this.taskService.createTask(createTaskDto);\n  }\n\n  @Patch('/:id/status')\n  updateTaskStatus(\n    @Param('id') id: string,\n    @Body('status', TaskStatusValidationPipe) status: TaskStatus,\n  ): Task {\n    return this.taskService.updateTaskStatus(id, status);\n  }\n\n  @Delete('/:id')\n  deleteTask(@Param('id') id: string): Task[] {\n    return this.taskService.deleteTask(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\n@Module({\n  controllers: [TasksController],\n  providers: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskAndFilter\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskAndFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskAndFilter(getTaskAndFilterDto: GetTaskAndFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getTaskAndFilterDto\n                                    \n                                                GetTaskAndFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Task[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Task, TaskStatus } from './tasks.model';\nimport { uuid } from 'uuidv4';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTaskAndFilterDto } from './dto/get-task-filter.dto';\n\n@Injectable()\nexport class TasksService {\n  private tasks: Task[] = [];\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  getTaskAndFilter(getTaskAndFilterDto: GetTaskAndFilterDto): Task[] {\n    const { status, search } = getTaskAndFilterDto;\n\n    let tasks = this.getTasks();\n\n    if (status) {\n      tasks = tasks.filter((task) => task.status === status);\n    }\n\n    if (search) {\n      tasks = tasks.filter(\n        (task) =>\n          task.title.includes(search) || task.description.includes(search),\n      );\n    }\n\n    return tasks;\n  }\n\n  getTaskById(id: string): Task | undefined {\n    const task = this.tasks.find((task) => task.id === id);\n\n    if (!task) {\n      throw new NotFoundException(`Task with id: ${id} not found`);\n    }\n\n    return task;\n  }\n\n  createTask(createTaskDto: CreateTaskDto): Task {\n    const { title, description } = createTaskDto;\n\n    const task: Task = {\n      title,\n      description,\n      status: TaskStatus.OPEN,\n      id: uuid(),\n    };\n\n    this.tasks.push(task);\n    return task;\n  }\n\n  updateTaskStatus(id: string, status: TaskStatus): Task {\n    let task: Task;\n    for (let i = 0; i  task.id !== foundTask.id);\n    return this.tasks;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/config-option.swagger.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/config-option.swagger.ts\n            \n            variable\n            customOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/config-option.swagger.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/get-task-filter.dto.ts\n            \n            class\n            GetTaskAndFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/pipes/task-status-validation.pipes.ts\n            \n            class\n            TaskStatusValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tasks/tasks.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuidv4 : ^6.2.10\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../tasks.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/tasks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 INPROGRESS\n                            \n                        \n                        \n                            \n                                Value : INPROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config-option.swagger.ts)\n                        \n                        \n                            customOptions   (src/.../config-option.swagger.ts)\n                        \n                        \n                            options   (src/.../config-option.swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/config-option.swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n  .setTitle('NestJS Tasks Manager Api')\n  .setDescription('Tasks Manager API description')\n  .setVersion('1.0')\n  .addTag('Tasks Manager')\n  .build()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SwaggerCustomOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  swaggerOptions: {\n    persistAuthorization: true,\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SwaggerDocumentOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * make sure that the library generates operation names like createUser instead of UserController_createUser\n   * @param controllerKey\n   * @param methodKey\n   * @returns\n   */\n  operationIdFactory: (controllerKey: string, methodKey: string): string =>\n    methodKey,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
