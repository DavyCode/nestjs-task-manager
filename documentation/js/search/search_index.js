var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.057,1,1.269]],["body/modules/AppModule.html",[0,1.681,1,2.29,2,1.138,3,1.138,4,1.65,5,1.65,6,1.138,7,1.65,8,1.65,9,2.032,10,2.032,11,1.908,12,0.068,13,2.178,14,1.65,15,1.65,16,0.786,17,0.644,18,0.644,19,2.611,20,3.446,21,1.501,22,1.138,23,2.611,24,0.786,25,0.518,26,0.038,27,0.051,28,0.038]],["title/classes/CreateTaskDto.html",[25,0.481,29,1.057]],["body/classes/CreateTaskDto.html",[12,0.066,16,0.849,17,0.696,18,0.696,24,0.849,25,0.56,26,0.042,27,0.053,28,0.042,29,1.579,30,1.783,31,3.116,32,2.196,33,0.696,34,1.895,35,2.094,36,2.531,37,1.316,38,1.841,39,1.895,40,2.822,41,2.822]],["title/classes/GetTaskAndFilterDto.html",[25,0.481,42,1.057]],["body/classes/GetTaskAndFilterDto.html",[12,0.067,16,0.806,17,0.66,18,0.66,21,1.167,24,0.806,25,0.531,26,0.039,27,0.052,28,0.039,30,1.692,33,0.66,34,1.832,37,1.272,38,1.526,39,1.832,42,1.526,43,3.038,44,1.418,45,2.084,46,3.038,47,2.042,48,2.678,49,1.701,50,2.678,51,1.692]],["title/interfaces/Task.html",[44,0.881,52,1.269]],["body/interfaces/Task.html",[12,0.069,16,0.711,17,0.582,18,0.582,24,0.97,26,0.035,27,0.047,28,0.035,33,0.582,34,1.684,35,2.059,36,2.489,37,1.43,38,1.958,44,1.17,47,2.059,49,1.716,52,1.234,53,2.361,54,1.492,55,2.489,56,2.361,57,2.036,58,2.506,59,2.506]],["title/controllers/TasksController.html",[60,1.269,61,1.269]],["body/controllers/TasksController.html",[12,0.07,16,0.386,17,0.317,18,0.317,21,1.389,22,0.559,24,0.386,25,0.255,26,0.019,27,0.03,28,0.019,29,1.48,33,0.317,37,1.158,38,1.663,39,1.667,42,1.271,44,1.477,47,1.525,49,1.271,51,0.811,55,2.147,60,0.671,61,1.071,62,0.999,63,0.999,64,1.284,65,0.999,66,1.594,67,1.594,68,1.594,69,1.594,70,1.594,71,1.989,72,0.999,73,3.188,74,2.556,75,1.284,76,2.481,77,2.481,78,2.481,79,2.481,80,0.999,81,2.049,82,1.284,83,0.999,84,2.049,85,1.284,86,1.594,87,1.284,88,1.284,89,2.049,90,0.999,91,2.049,92,1.284,93,1.284,94,1.284,95,1.284,96,1.284,97,1.284,98,0.999,99,0.999,100,0.999,101,0.999,102,0.744,103,0.999,104,1.284,105,1.284,106,1.284,107,1.284,108,1.284,109,2.644,110,1.284,111,1.284,112,1.284,113,1.284,114,1.284,115,1.284,116,1.284,117,1.284,118,1.284,119,1.284,120,1.284]],["title/modules/TasksModule.html",[0,1.057,11,1.057]],["body/modules/TasksModule.html",[0,1.635,2,1.077,3,1.077,4,1.563,5,1.563,6,1.077,7,2.372,8,1.563,11,1.879,12,0.068,13,2.1,14,1.563,15,1.563,16,0.744,17,0.61,18,0.61,21,1.635,22,1.077,24,0.744,25,0.49,26,0.036,27,0.049,28,0.036,61,1.963,62,2.586,102,1.566,103,1.924,121,1.924,122,1.924,123,2.472,124,2.472]],["title/injectables/TasksService.html",[102,0.881,125,1.269]],["body/injectables/TasksService.html",[12,0.071,16,0.339,17,0.278,18,0.278,21,1.298,22,0.49,24,0.339,25,0.223,26,0.017,27,0.027,28,0.017,29,1.394,33,0.278,34,0.963,35,0.963,36,1.164,37,1.162,38,1.535,39,1.766,42,1.394,44,1.577,46,1.433,47,1.766,49,1.177,51,0.711,55,2.022,65,2.628,66,1.433,67,1.433,68,1.433,69,1.433,70,2.102,71,1.433,72,1.433,76,2.318,77,2.318,78,2.318,79,2.489,80,0.876,83,1.433,86,1.433,90,1.433,98,0.876,99,0.876,100,0.876,101,0.876,102,0.669,109,2.318,125,0.963,126,1.125,127,0.876,128,2.338,129,1.842,130,1.125,131,1.125,132,1.842,133,1.125,134,1.125,135,1.125,136,1.125,137,1.125,138,0.876,139,1.125,140,1.842,141,0.876,142,1.842,143,2.338,144,1.125,145,1.125,146,1.125,147,1.125,148,1.125,149,1.125,150,1.125,151,1.842,152,1.125,153,1.125,154,0.876]],["title/coverage.html",[155,2.074]],["body/coverage.html",[6,1.131,12,0.067,18,0.64,25,0.681,26,0.038,27,0.051,28,0.038,29,1.131,31,2.019,32,2.019,37,0.942,42,1.131,43,2.019,44,1.246,45,2.019,52,1.357,54,1.64,60,1.357,61,1.357,63,2.019,102,0.942,125,1.357,127,2.019,154,3.402,155,1.64,156,2.595,157,2.595,158,2.595,159,2.019,160,2.595,161,2.595,162,3.432,163,2.595,164,2.595,165,2.595,166,2.595,167,2.595,168,2.595]],["title/dependencies.html",[3,1.268,169,2.042]],["body/dependencies.html",[3,1.328,12,0.069,22,1.328,26,0.045,27,0.056,28,0.045,141,2.371,170,4.149,171,3.047,172,3.047,173,3.047,174,3.047,175,3.047,176,3.047,177,3.047,178,3.047,179,3.047,180,3.047,181,3.047]],["title/miscellaneous/enumerations.html",[182,1.068,183,2.265]],["body/miscellaneous/enumerations.html",[12,0.067,26,0.047,27,0.057,28,0.047,33,0.78,49,1.697,54,1.999,57,2.461,58,3.03,59,3.03,138,3.283,182,1.653,183,2.461,184,3.162]],["title/miscellaneous/functions.html",[182,1.068,185,2.265]],["body/miscellaneous/functions.html",[6,1.909,12,0.06,26,0.051,27,0.06,28,0.051,33,0.851,159,2.683,182,1.803,185,2.683,186,3.448]],["title/index.html",[33,0.504,187,2.042,188,2.042]],["body/index.html",[12,0.068,17,0.503,26,0.03,27,0.043,28,0.03,35,1.066,57,1.289,155,1.289,189,2.039,190,2.039,191,2.908,192,2.039,193,2.039,194,2.039,195,2.039,196,2.039,197,2.039,198,3.389,199,2.039,200,2.039,201,2.039,202,2.039,203,4.18,204,2.039,205,2.039,206,2.039,207,4.061,208,2.039,209,2.039,210,2.908,211,2.039,212,2.039,213,2.039,214,2.039,215,2.908,216,2.908,217,2.039,218,2.039,219,2.039,220,2.908,221,2.908,222,2.039,223,2.039,224,2.039,225,2.039,226,1.587,227,2.039,228,2.039,229,2.039,230,2.039,231,2.039,232,2.039,233,2.039,234,2.039,235,2.039,236,2.039,237,2.039,238,2.039,239,2.039,240,2.039,241,2.039,242,2.039,243,2.039,244,2.039]],["title/modules.html",[2,1.43]],["body/modules.html",[1,1.76,2,1.466,11,1.466,12,0.06,26,0.05,27,0.06,28,0.05,226,3.147,245,4.044,246,4.044,247,4.044]],["title/overview.html",[248,2.553]],["body/overview.html",[0,1.189,1,2.182,2,1.189,3,1.189,4,1.725,5,1.725,6,1.189,7,1.725,8,1.725,9,2.124,10,2.124,11,1.885,12,0.061,13,2.242,14,1.725,15,1.725,26,0.04,27,0.052,28,0.04,30,1.725,52,1.427,60,1.427,102,1.431,121,2.124,122,2.124,125,1.427,248,2.124,249,3.548,250,3.941]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":154,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":250,"title":{},"body":{"overview.html":{}}}],["2",{"_index":249,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["6.2.10",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":227,"title":{},"body":{"index.html":{}}}],["app",{"_index":205,"title":{},"body":{"index.html":{}}}],["applications",{"_index":197,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":237,"title":{},"body":{"index.html":{}}}],["backers",{"_index":228,"title":{},"body":{"index.html":{}}}],["body",{"_index":93,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status",{"_index":117,"title":{},"body":{"controllers/TasksController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":247,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":245,"title":{},"body":{"modules.html":{}}}],["building",{"_index":192,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["classes",{"_index":30,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":121,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":122,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["const",{"_index":143,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"controllers/TasksController.html":{}}}],["controller",{"_index":60,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":104,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":62,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["coverage",{"_index":155,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtask",{"_index":67,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtask(@body",{"_index":114,"title":{},"body":{"controllers/TasksController.html":{}}}],["createtask(createtaskdto",{"_index":72,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtaskdto",{"_index":29,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":73,"title":{},"body":{"controllers/TasksController.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/TasksService.html":{}}}],["defined",{"_index":39,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":94,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete('/:id",{"_index":81,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask",{"_index":68,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["deletetask(@param('id",{"_index":119,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask(id",{"_index":80,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":35,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["development",{"_index":206,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":59,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":98,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/get",{"_index":100,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":217,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":193,"title":{},"body":{"index.html":{}}}],["enum",{"_index":56,"title":{},"body":{"interfaces/Task.html":{}}}],["enumerations",{"_index":183,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["filter.dto",{"_index":101,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filter.dto.ts",{"_index":45,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:4",{"_index":50,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["filter.dto.ts:5",{"_index":48,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{}}}],["filterdto",{"_index":89,"title":{},"body":{"controllers/TasksController.html":{}}}],["framework",{"_index":191,"title":{},"body":{"index.html":{}}}],["function",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":185,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":84,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskandfilter",{"_index":129,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskandfilter(gettaskandfilterdto",{"_index":132,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskandfilterdto",{"_index":42,"title":{"classes/GetTaskAndFilterDto.html":{}},"body":{"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["gettaskbyid",{"_index":69,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":112,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":83,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks",{"_index":70,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks(@query",{"_index":107,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(filterdto",{"_index":87,"title":{},"body":{"controllers/TasksController.html":{}}}],["getting",{"_index":187,"title":{"index.html":{}},"body":{}}],["grow",{"_index":223,"title":{},"body":{"index.html":{}}}],["here",{"_index":234,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":241,"title":{},"body":{"index.html":{}}}],["id",{"_index":55,"title":{},"body":{"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["injectable",{"_index":125,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/TasksService.html":{}}}],["inprogress",{"_index":58,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["installation",{"_index":202,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":204,"title":{},"body":{"index.html":{}}}],["interface",{"_index":52,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":53,"title":{},"body":{"interfaces/Task.html":{}}}],["join",{"_index":230,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":238,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["license",{"_index":244,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":221,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":66,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":182,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":220,"title":{},"body":{"index.html":{}}}],["mode",{"_index":210,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":233,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":239,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["nest",{"_index":198,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":243,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":190,"title":{},"body":{"index.html":{}}}],["npm",{"_index":203,"title":{},"body":{"index.html":{}}}],["object.keys(filterdto).length",{"_index":108,"title":{},"body":{"controllers/TasksController.html":{}}}],["open",{"_index":57,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["optional",{"_index":78,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":248,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":169,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":95,"title":{},"body":{"controllers/TasksController.html":{}}}],["param('id",{"_index":116,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["patch",{"_index":96,"title":{},"body":{"controllers/TasksController.html":{}}}],["patch('/:id/status",{"_index":91,"title":{},"body":{"controllers/TasksController.html":{}}}],["please",{"_index":231,"title":{},"body":{"index.html":{}}}],["post",{"_index":74,"title":{},"body":{"controllers/TasksController.html":{}}}],["prefix",{"_index":64,"title":{},"body":{"controllers/TasksController.html":{}}}],["private",{"_index":128,"title":{},"body":{"injectables/TasksService.html":{}}}],["production",{"_index":212,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":189,"title":{},"body":{"index.html":{}}}],["project",{"_index":222,"title":{},"body":{"index.html":{}}}],["properties",{"_index":34,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["query",{"_index":97,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":232,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":201,"title":{},"body":{"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["rimraf",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":207,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":194,"title":{},"body":{"index.html":{}}}],["search",{"_index":46,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"injectables/TasksService.html":{}}}],["server",{"_index":195,"title":{},"body":{"index.html":{}}}],["side",{"_index":196,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["sponsors",{"_index":225,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.model.ts",{"_index":184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/dto/create",{"_index":31,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/get",{"_index":43,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":63,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:21",{"_index":88,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:29",{"_index":85,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:34",{"_index":75,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:39",{"_index":92,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:47",{"_index":82,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.model.ts",{"_index":54,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/tasks.module.ts",{"_index":123,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":127,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:11",{"_index":135,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:15",{"_index":133,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:34",{"_index":134,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:38",{"_index":130,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:52",{"_index":136,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:63",{"_index":131,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:9",{"_index":139,"title":{},"body":{"injectables/TasksService.html":{}}}],["start",{"_index":208,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":211,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":213,"title":{},"body":{"index.html":{}}}],["started",{"_index":188,"title":{"index.html":{}},"body":{}}],["starter",{"_index":200,"title":{},"body":{"index.html":{}}}],["statements",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":47,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["stay",{"_index":235,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["support",{"_index":226,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":246,"title":{},"body":{"modules.html":{}}}],["table",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":44,"title":{"interfaces/Task.html":{}},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["task.description.includes(search",{"_index":149,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":99,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":32,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:2",{"_index":41,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:3",{"_index":40,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.id",{"_index":151,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.status",{"_index":146,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":148,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks",{"_index":65,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":124,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.filter",{"_index":147,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.filter((task",{"_index":145,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.model",{"_index":51,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["tasks.service",{"_index":103,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":61,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["taskservice",{"_index":106,"title":{},"body":{"controllers/TasksController.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":102,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":49,"title":{},"body":{"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.open",{"_index":152,"title":{},"body":{"injectables/TasksService.html":{}}}],["test",{"_index":216,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":219,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":218,"title":{},"body":{"index.html":{}}}],["tests",{"_index":215,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":224,"title":{},"body":{"index.html":{}}}],["this.gettasks",{"_index":144,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks",{"_index":142,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find((task",{"_index":150,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":153,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.taskservice.createtask(createtaskdto",{"_index":115,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.deletetask(id",{"_index":120,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettaskandfilter(filterdto",{"_index":110,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettaskbyid(id",{"_index":113,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettasks",{"_index":111,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.updatetaskstatus(id",{"_index":118,"title":{},"body":{"controllers/TasksController.html":{}}}],["title",{"_index":36,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{}}}],["touch",{"_index":236,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":242,"title":{},"body":{"index.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskAndFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["typescript",{"_index":199,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":86,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["unit",{"_index":214,"title":{},"body":{"index.html":{}}}],["updatetaskstatus",{"_index":71,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updatetaskstatus(id",{"_index":90,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["uuid",{"_index":140,"title":{},"body":{"injectables/TasksService.html":{}}}],["uuidv4",{"_index":141,"title":{},"body":{"injectables/TasksService.html":{},"dependencies.html":{}}}],["value",{"_index":138,"title":{},"body":{"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["watch",{"_index":209,"title":{},"body":{"index.html":{}}}],["website",{"_index":240,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":229,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\n\n@Module({\n  imports: [TasksModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTaskDto {\n  title: string;\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTaskAndFilterDto.html":{"url":"classes/GetTaskAndFilterDto.html","title":"class - GetTaskAndFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTaskAndFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/get-task-filter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskStatus } from '../tasks.model';\n\nexport class GetTaskAndFilterDto {\n  status: TaskStatus;\n  search: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         TaskStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n}\n\nexport enum TaskStatus {\n  OPEN = 'OPEN',\n  INPROGRESS = 'INPROGRESS',\n  DONE = 'DONE',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks(filterDto: GetTaskAndFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetTaskAndFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/status')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTaskAndFilterDto } from './dto/get-task-filter.dto';\nimport { Task, TaskStatus } from './tasks.model';\nimport { TasksService } from './tasks.service';\n\n@Controller('tasks')\nexport class TasksController {\n  constructor(private taskService: TasksService) {}\n\n  @Get()\n  getTasks(@Query() filterDto: GetTaskAndFilterDto): Task[] {\n    if (Object.keys(filterDto).length) {\n      return this.taskService.getTaskAndFilter(filterDto);\n    }\n    return this.taskService.getTasks();\n  }\n\n  @Get('/:id')\n  getTaskById(@Param('id') id: string): Task | undefined {\n    return this.taskService.getTaskById(id);\n  }\n\n  @Post()\n  createTask(@Body() createTaskDto: CreateTaskDto): Task {\n    return this.taskService.createTask(createTaskDto);\n  }\n\n  @Patch('/:id/status')\n  updateTaskStatus(\n    @Param('id') id: string,\n    @Body('status') status: TaskStatus,\n  ): Task {\n    return this.taskService.updateTaskStatus(id, status);\n  }\n\n  @Delete('/:id')\n  deleteTask(@Param('id') id: string): Task[] {\n    return this.taskService.deleteTask(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\n@Module({\n  controllers: [TasksController],\n  providers: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskAndFilter\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskAndFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskAndFilter(getTaskAndFilterDto: GetTaskAndFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getTaskAndFilterDto\n                                    \n                                                GetTaskAndFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Task[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaskStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Task, TaskStatus } from './tasks.model';\nimport { uuid } from 'uuidv4';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTaskAndFilterDto } from './dto/get-task-filter.dto';\n\n@Injectable()\nexport class TasksService {\n  private tasks: Task[] = [];\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  getTaskAndFilter(getTaskAndFilterDto: GetTaskAndFilterDto): Task[] {\n    const { status, search } = getTaskAndFilterDto;\n\n    let tasks = this.getTasks();\n\n    if (status) {\n      tasks = tasks.filter((task) => task.status === status);\n    }\n\n    if (search) {\n      tasks = tasks.filter(\n        (task) =>\n          task.title.includes(search) || task.description.includes(search),\n      );\n    }\n\n    return tasks;\n  }\n\n  getTaskById(id: string): Task | undefined {\n    return this.tasks.find((task) => task.id === id);\n  }\n\n  createTask(createTaskDto: CreateTaskDto): Task {\n    const { title, description } = createTaskDto;\n\n    const task: Task = {\n      title,\n      description,\n      status: TaskStatus.OPEN,\n      id: uuid(),\n    };\n\n    this.tasks.push(task);\n    return task;\n  }\n\n  updateTaskStatus(id: string, status: TaskStatus): Task {\n    let task: Task;\n    for (let i = 0; i  task.id !== id);\n    return this.tasks;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/get-task-filter.dto.ts\n            \n            class\n            GetTaskAndFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tasks/tasks.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            uuidv4 : ^6.2.10\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../tasks.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/tasks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 INPROGRESS\n                            \n                        \n                        \n                            \n                                Value : INPROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
